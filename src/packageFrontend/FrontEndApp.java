/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package packageFrontend;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import packageHouse.House;
import packageHouseProcessor.houseProcessor;

/**
 *
 * @author Rentex
 */
public class FrontEndApp extends javax.swing.JFrame {

    /**
     * Creates new form FrontEndApp
     */
    public FrontEndApp() {
        initComponents();
    }
 DefaultTableModel model, modelTwo;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        RentHouse = new javax.swing.JButton();
        EditPrice = new javax.swing.JButton();
        serachHouse = new javax.swing.JButton();
        getHouseInfo = new javax.swing.JButton();
        AddHouse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allHousesTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        renetedHousesTab = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        closeApp = new javax.swing.JButton();
        totalHouses = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        UpdateAllHouses = new javax.swing.JButton();
        refreshRented = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setBackground(new java.awt.Color(102, 102, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("HOUSING MANAGEMENT SYSTEM");

        RentHouse.setBackground(new java.awt.Color(255, 255, 255));
        RentHouse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RentHouse.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\Pics\\addemployee.png")); // NOI18N
        RentHouse.setText("RENT HOUSE");
        RentHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentHouseActionPerformed(evt);
            }
        });

        EditPrice.setBackground(new java.awt.Color(0, 255, 0));
        EditPrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EditPrice.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\Pics\\edit.png")); // NOI18N
        EditPrice.setText("EDIT PRICE");
        EditPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPriceActionPerformed(evt);
            }
        });

        serachHouse.setBackground(new java.awt.Color(255, 255, 0));
        serachHouse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        serachHouse.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\Pics\\folder.png")); // NOI18N
        serachHouse.setText("SEARCH HOUSE");
        serachHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serachHouseActionPerformed(evt);
            }
        });

        getHouseInfo.setBackground(new java.awt.Color(204, 204, 204));
        getHouseInfo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getHouseInfo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\Pics\\job.png")); // NOI18N
        getHouseInfo.setText("HOUSE INFO");
        getHouseInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getHouseInfoActionPerformed(evt);
            }
        });

        AddHouse.setBackground(new java.awt.Color(51, 102, 255));
        AddHouse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddHouse.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\Pics\\add.png")); // NOI18N
        AddHouse.setText("ADD HOUSE");
        AddHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddHouseActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\hous.png")); // NOI18N

        allHousesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "House Code", "CITY", "RENT PRICE", "TENANT GAIN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(allHousesTable);

        renetedHousesTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HOUSE CODE", "CLIENT NAME", "PRICE/ MONTH", "TOT AMOUNT DUE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(renetedHousesTab);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("TOTAL HOUSES: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("FREE HOUSES:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("BOOKED HOUSES:");

        closeApp.setBackground(new java.awt.Color(102, 102, 255));
        closeApp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        closeApp.setForeground(new java.awt.Color(0, 51, 204));
        closeApp.setIcon(new javax.swing.ImageIcon("C:\\Users\\Rentex\\Desktop\\Pics\\exit.png")); // NOI18N
        closeApp.setText("CLOSE APP");
        closeApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAppActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        UpdateAllHouses.setBackground(new java.awt.Color(102, 102, 255));
        UpdateAllHouses.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UpdateAllHouses.setText("UPDATE ALL HOUSES TABLES");
        UpdateAllHouses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateAllHousesActionPerformed(evt);
            }
        });

        refreshRented.setBackground(new java.awt.Color(51, 51, 255));
        refreshRented.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshRented.setText("REFRESH RENTED HOUSE");
        refreshRented.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshRentedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RentHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EditPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serachHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(getHouseInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(474, 474, 474)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(189, 189, 189))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(284, 284, 284)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalHouses, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(UpdateAllHouses)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(refreshRented, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(160, 160, 160))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeApp, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(489, 489, 489))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(AddHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(RentHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EditPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(serachHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getHouseInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateAllHouses)
                            .addComponent(refreshRented))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(totalHouses, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeApp, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPriceActionPerformed
        // TODO add your handling code here:
          new EditPrice().setVisible(true);
        
    }//GEN-LAST:event_EditPriceActionPerformed

    private void getHouseInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getHouseInfoActionPerformed
        // TODO add your handling code here:
     houseProcessor hp = new houseProcessor();
     List<House> houses = new ArrayList<>();
     
     int houseCode =Integer.parseInt(JOptionPane.showInputDialog(null,"PLEASE ENTER SPECIFIC HOUSE CODE"));
     hp.getHousesFromDataBase(houses);
     int isFound = hp.GetHouseIndex(houseCode, houses);
     
     JOptionPane.showMessageDialog(RentHouse,"HOUSE CODE: "+houses.get(isFound).getHouseCode()+"\n"+
                                             "ADRESS: "+houses.get(isFound).getAdress()+"\n"+"CITY: "+
                                             houses.get(isFound).getCity()+"\n"+"LENGTH: "+houses.get(isFound).getLenght()
                                             +"WIDTH: "+ houses.get(isFound).getWidth()+"\n"+"OWNER NAMER: " +houses.get(isFound).getOwner().getName());
     
     
        
    }//GEN-LAST:event_getHouseInfoActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void closeAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAppActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeAppActionPerformed

    private void AddHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddHouseActionPerformed
        // TODO add your handling code here:
         
         
          new AddHouse().setVisible(true);
       
    }//GEN-LAST:event_AddHouseActionPerformed

    private void RentHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentHouseActionPerformed
        // TODO add your handling code here:
        new RentHouse().setVisible(true);
    }//GEN-LAST:event_RentHouseActionPerformed

    private void serachHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serachHouseActionPerformed
        // TODO add your handling code here:
        new SearchHouse().setVisible(true);
    }//GEN-LAST:event_serachHouseActionPerformed

    private void UpdateAllHousesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateAllHousesActionPerformed
        // This button helps to refresh the table by displaying all houses from the database
         int houseC=0;
         String city="";
         int price=0;
         int tenat=0;
         List<House> houses = new ArrayList<>();
         model = (DefaultTableModel)allHousesTable.getModel();
         
          model.setRowCount(0);
          houses.clear(); 
        houseProcessor ps = new houseProcessor();
        ps.getHousesFromDataBase(houses);
        
        
        
        for(int i=0; i< houses.size();i++){
           houseC = houses.get(i).getHouseCode();
           city = houses.get(i).getCity();
           price=houses.get(i).getRentPrice();
           tenat=houses.get(i).getRentPrice()-((houses.get(i).getRentPrice()*20)/100);
      
       model.addRow(new Object[]{
           houseC,
           city,
           price,
           tenat
      });
       }
      
        
        
    }//GEN-LAST:event_UpdateAllHousesActionPerformed

    private void refreshRentedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshRentedActionPerformed
        // TODO add your handling code here:
        
        modelTwo = (DefaultTableModel)renetedHousesTab.getModel();
        int houseC=0;
         String clientName;
         int price=0;
         int tenat=0;
         List<House>rentedHouses = new ArrayList<>();
       
         
          modelTwo.setRowCount(0);
          rentedHouses.clear(); 
        houseProcessor ps = new houseProcessor();
        ps.getRentedHousesFromDataBase(rentedHouses);
        
        int amountDue =0;
        
        for(int i=0; i< rentedHouses.size();i++){
           houseC = rentedHouses.get(i).getHouseCode();
           clientName = rentedHouses.get(i).getClient().getName();
           price = rentedHouses.get(i).getRentPrice();
           amountDue = rentedHouses.get(i).getDuration() * rentedHouses.get(i).getRentPrice();
           
      
       modelTwo.addRow(new Object[]{
           houseC,
           clientName,
           price,
          amountDue
      });
       }
      
        
    }//GEN-LAST:event_refreshRentedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEndApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEndApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEndApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEndApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEndApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddHouse;
    private javax.swing.JButton EditPrice;
    private javax.swing.JButton RentHouse;
    private javax.swing.JButton UpdateAllHouses;
    private javax.swing.JTable allHousesTable;
    private javax.swing.JButton closeApp;
    private javax.swing.JButton getHouseInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton refreshRented;
    private javax.swing.JTable renetedHousesTab;
    private javax.swing.JButton serachHouse;
    private javax.swing.JTextField totalHouses;
    // End of variables declaration//GEN-END:variables
}
